<?php
require('fpdf.php');
/*
require('multicels.php');
*/

class cuerpoPDF extends FPDF
/*
class cuerpoPDF extends mFPDF
*/
{
      var $widths;
      var $aligns;

    // cabecera de la página

    function Header()
    {
$encabezado = utf8_decode("República Bolivariana de Venezuela\n
Consejo Comunal\n
\"\"\n
Parroquia\n
Municipio\n
Mérida
");
        //Logo
        $this->Image('./../imagenes/cc.png',10,8,33);
        //Arial bold 12
        $this->SetFont('Arial','B',12);
        //Movernos a la derecha
        $this->Cell(40);
        //Título
        $this->MultiCell(120,2,$encabezado,0,'C');
        //Salto de línea
        $this->Ln(15);
        //
        $this->Cell(40);
        $this->Cell(120,3,utf8_decode("Certificación de Residencia"),0,1,'C');
        $this->Ln(15);

/*
        //Put the watermark
        $this->SetFont('Arial','B',200);
        $this->SetTextColor(255,192,203);
        $this->RotatedText(75,230,utf8_decode("S I R"),45);
        $this->SetFont('Arial','',10);
*/
    }

      // pie de página
    function Footer()
    {
        //Posición: a 1,5 cm del final
        $this->SetY(-15);
        // especificar fuetne
        $this->SetFont('Arial','I',8);
        // fuente de información
        $this->MultiCell(0,3,utf8_decode("Nota al pie"),0,'L');
        // posición a 1 cm del final de la página
        $this->SetY(-10);
        // número de página
/*
        $this->Cell(0,10,utf8_decode("Página: ").$this->PageNo().'/{nb}',0,0,'C');
*/
    }

    function SetWidths($w)
    {
        //Set the array of column widths
        $this->widths=$w;
    }

    function SetAligns($a)
    {
        //Set the array of column alignments
        $this->aligns=$a;
    }

    function Row($data,$alinear,$ancho,$titulo=true)
        {
        //Calculate the height of the row
        $nb=0;
        for($i=0;$i<count($data);$i++)
            $nb=max($nb,$this->NbLines($this->widths[$i],$data[$i]));
        $h=$ancho*$nb;
        //Issue a page break first if needed
        $this->CheckPageBreak($h);
        //Draw the cells of the row
        $j = count($data);

/*
        if($this->num%2==0)
            $this->SetFillColor(224,235,255);
        else
            $this->SetFillColor(230,230,230);
*/
        if ($titulo) $this->SetFillColor(255,255,255);
        $this->num++;
        for($i=0;$i<$j;$i++)
        {
            $w=$this->widths[$i];
            $a=isset($this->aligns[$i]) ? $this->aligns[$i] : $alinear;
            // para todas las columnas menos la primera, alinear a la derecha
            if ($i == 0) $a = 'L';
            if ($i == 1) $a = 'R';
            //Save the current position
            $x=$this->GetX();
            $y=$this->GetY();
            //Draw the border
            $this->Rect($x,$y,$w,$h,'FD');

            //Print the text
            $this->MultiCell($w,$ancho,$data[$i],0,$a);
            //Put the position to the right of the cell
            $this->SetXY($x+$w,$y);
        }

          //Go to the next line
          $this->Ln($h);
        }

    function CheckPageBreak($h)
    {
        //If the height h would cause an overflow, add a new page immediately
        if($this->GetY()+$h>$this->PageBreakTrigger)
            $this->AddPage($this->CurOrientation);
    }

    function NbLines($w,$txt)
    {
        //Computes the number of lines a MultiCell of width w will take
        $cw=&$this->CurrentFont['cw'];
        if($w==0)
            $w=$this->w-$this->rMargin-$this->x;
        $wmax=($w-2*$this->cMargin)*1000/$this->FontSize;
        $s=str_replace("\r",'',$txt);
        $nb=strlen($s);
        if($nb>0 and $s[$nb-1]=="\n")
            $nb--;
        $sep=-1;
        $i=0;
        $j=0;
        $l=0;
        $nl=1;
        while($i<$nb)
            {
            $c=$s[$i];
            if($c=="\n")
            {
                $i++;
                $sep=-1;
                $j=$i;
                $l=0;
                $nl++;
                continue;
            }
            if($c==' ')
                $sep=$i;
            $l+=$cw[$c];
            if($l>$wmax)
            {
                if($sep==-1)
                {
                    if($i==$j)
                        $i++;
                }
                else
                    $i=$sep+1;
            $sep=-1;
            $j=$i;
            $l=0;
            $nl++;
            }
            else
            $i++;
        }
        return $nl;
    }
}
?>
